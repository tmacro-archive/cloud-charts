apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cloud-deploy.fullname" . }}
  labels:
    {{- include "cloud-deploy.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cloud-deploy.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cloud-deploy.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "cloud-deploy.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 120
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 3000
            protocol: TCP
        env:
          - name: ENV_DEPLOY_KEY_PATH
            value: /opt/secret/deploy_key/deploy_key
          - name: ENV_GPG_KEY_PATH
            value: /opt/secret/gpg_key/marvin_at_cloudconf
          - name: CLOUDCONF_VERSION
            valueFrom:
              configMapKeyRef:
                name: cloud-deploy-version
                key: cloudconf_version
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          - name: inventory-secret
            mountPath: /opt/secret/inventory
          - name: deploy-secret
            mountPath: /opt/secret/deploy_key
          - name: config-secret
            mountPath: /opt/secret/gpg_key
      volumes:
        - name: inventory-secret
          secret:
            secretName: {{ .Values.existingSecrets.inventory }}
        - name: deploy-secret
          secret:
            secretName: {{ .Values.existingSecrets.deploy_key }}
        - name: config-secret
          secret:
            secretName: {{ .Values.existingSecrets.cloudconf }}
