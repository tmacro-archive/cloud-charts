---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.argo.namespace }}
  labels:
    {{- .Values.argo.namespaceLabels | default (dict) | toYaml | nindent 4 }}
    {{- include "bootstrap.helmLabels" . | nindent 4 }}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: argocd
  namespace: kube-system
  labels:
    {{- include "bootstrap.helmLabels" . | nindent 4 }}
spec:
  chart: {{ tpl .Values.argo.chartUrl (merge (dict "Template" .Template) .Values.argo) }}
  targetNamespace: {{ .Values.argo.namespace }}
  valuesContent: |-
    {{- tpl .Values.argo.valuesTpl (merge (dict "Template" .Template) .Values.argo) | nindent 4 }}
{{- if .Values.argo.ingress.enabled }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server
  namespace: {{ .Values.argo.namespace }}
  labels:
    {{- include "bootstrap.helmLabels" . | nindent 4 }}
spec:
  entryPoints:
    {{- .Values.argo.ingress.entryPoints | default (list) | toYaml | nindent 4 }}
  routes:
    - kind: Rule
      match: Host(`{{ .Values.argo.ingress.domain }}`)
      priority: 10
      {{ if gt (len (default (list) .Values.argo.ingress.middlewares)) 0 }}
      middlewares:
        {{- .Values.argo.ingress.middlewares | toYaml | nindent 8 }}
      {{- end }}
      services:
        - name: argocd-server
          port: 80
    - kind: Rule
      match: Host(`{{ .Values.argo.ingress.domain }}`) && Headers(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - name: argocd-server
          port: 80
          scheme: h2c
  {{- if .Values.argo.ingress.tls.enabled }}
  tls:
    secretName: {{ .Values.argo.ingress.tls.secretName }}
  {{- end }}
{{- end }}
